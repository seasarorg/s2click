<?xml version="1.0" encoding="UTF-8"?>
<project name="S2Click" default="compile">

	<property name="version" value="1.0.3"/>
	<property name="jar.name" value="s2click-${version}.jar"/>
	<property name="src.dir" value="../src"/>
	<property name="bin.dir" value="./bin"/>
	<property name="test.src.dir" value="../test"/>
	<property name="test.bin.dir" value="./test"/>
	<property name="lib.dir" value="../WebContent/WEB-INF/lib"/>
	<property name="example.dir" value="s2click"/>
	<property name="example.war.name" value="s2click-example.war"/>
	<property name="blank.dir" value="blank"/>
	<property name="blank.zip.name" value="s2click-blank.zip"/>
	<property name="blank-s2jdbc.dir" value="blank-s2jdbc"/>
	<property name="blank-s2jdbc.zip.name" value="s2click-s2jdbc-blank.zip"/>
	<property name="release.dir" value="s2click-${version}"/>
	<property name="release.zip.name" value="s2click-${version}.zip"/>
	<property name="doc.dir" value="docs"/>
	<property name="javadoc.dir" value="${doc.dir}/javadoc"/>
	<property name="cobertura.dir" value="lib/cobertura"/>

	<path id="classpath">
		<pathelement location="${lib.dir}/aopalliance-1.0.jar"/>
		<pathelement location="${lib.dir}/click-2.1.0-patched.jar"/>
		<pathelement location="${lib.dir}/click-extras-2.1.0.jar"/>
		<pathelement location="${lib.dir}/commons-logging-1.1.jar"/>
		<pathelement location="${lib.dir}/javassist-3.4.ga.jar"/>
		<pathelement location="${lib.dir}/jsonic-1.1.0.jar"/>
		<pathelement location="${lib.dir}/log4j-1.2.13.jar"/>
		<pathelement location="${lib.dir}/ognl-2.6.9-patch-20090427.jar"/>
		<pathelement location="${lib.dir}/s2-extension-2.4.40.jar"/>
		<pathelement location="${lib.dir}/s2-framework-2.4.40.jar"/>
		<pathelement location="${lib.dir}/s2-tiger-2.4.40.jar"/>
		<pathelement location="${lib.dir}/geronimo-ejb_3.0_spec-1.0.jar"/>
		<pathelement location="${lib.dir}/geronimo-jpa_3.0_spec-1.0.jar"/>
		<pathelement location="${lib.dir}/geronimo-jta_1.1_spec-1.0.jar"/>
		<pathelement location="${lib.dir}/hsqldb.jar"/>
		<pathelement location="./lib/servlet-api-2.3.jar"/>
		<pathelement location="./lib/junit.jar"/>
		<pathelement location="./lib/click-mock-2.1.0.jar"/>
		<pathelement location="./lib/poi-3.0-FINAL.jar"/>
		<pathelement location="./lib/"/>
		<pathelement location="${test.bin.dir}"/>
		<pathelement location="${bin.dir}"/>
	</path>

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

	<!--==================================================-->
	<!-- S2Clickのコンパイル -->
	<!--==================================================-->
    <target name="compile">
    	<mkdir dir="${bin.dir}"/>
    	<javac srcdir="${src.dir}" destdir="${bin.dir}" source="1.5"
    		target="1.5" encoding="UTF-8" debug="true" classpathref="classpath"/>

		<copy todir="${bin.dir}">
			<fileset dir="${src.dir}" includes="**/*.js" />
			<fileset dir="${src.dir}" includes="**/*.gif" />
			<fileset dir="${src.dir}" includes="**/*.png" />
			<fileset dir="${src.dir}" includes="**/*.css" />
			<fileset dir="${src.dir}" includes="**/*.zip" />
			<fileset dir="${src.dir}" includes="**/*.xml" />
			<fileset dir="${src.dir}" includes="**/*.html" excludes="**/package.html" />
			<fileset dir="${src.dir}" includes="**/*.properties" />
		</copy>
    </target>

	<!--==================================================-->
	<!-- テストの実行 -->
	<!--==================================================-->
    <target name="test" depends="compile">
    	<mkdir dir="${test.bin.dir}"/>

    	<javac srcdir="${test.src.dir}" destdir="${test.bin.dir}" source="1.5"
    		target="1.5" encoding="UTF-8" debug="true" classpathref="classpath"/>

    	<copy todir="${test.bin.dir}">
    		<fileset dir="${src.dir}" includes="**/*.dicon" />
    		<fileset dir="${src.dir}" includes="**/*.properties" />
			<fileset dir="${src.dir}" includes="**/*.script" />
    		<fileset dir="${test.src.dir}" includes="**/*.js" />
    		<fileset dir="${test.src.dir}" includes="**/*.txt" />
    		<fileset dir="${test.src.dir}" includes="**/*.xls" />
    		<fileset dir="${test.src.dir}" includes="**/*.dicon" />
    	</copy>
<!--
		<cobertura-instrument todir="${test.bin.dir}">
			<fileset dir="${test.bin.dir}">
				<include name="**/*.class"/>
			</fileset>
		</cobertura-instrument>
-->
    	<junit printsummary="true" haltonfailure="true" haltonerror="true">
    		<classpath refid="classpath" />
    		<classpath location="lib/cobertura/cobertura.jar" />

    		<batchtest fork="false">
    			<formatter type="plain"/>
				<fileset dir="${test.src.dir}">
					<include name="**/*Test.java"/>
					<exclude name="**/AllTests.java"/>
				</fileset>
    		</batchtest>
    	</junit>
<!--
    	<cobertura-report srcdir="${src.dir}" destdir="cobertura"/>
-->
    </target>

	<!--==================================================-->
	<!-- S2ClickのJavadocを作成 -->
	<!--==================================================-->
    <target name="javadoc">
    	<mkdir dir="${javadoc.dir}"/>
    	<javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" source="1.5"
    		encoding="UTF-8" classpathref="classpath"
    		excludepackagenames="org.seasar.s2click.example/**"/>
    </target>

	<!--==================================================-->
	<!-- S2ClickのJARを作成 -->
	<!--==================================================-->
	<target name="jar" depends="compile">
		<mkdir dir="${release.dir}"/>
    	<copy todir="${bin.dir}">
    		<fileset dir="${src.dir}" includes="**/*.java"
    			excludes="org/seasar/s2click/example/**"/>
    	</copy>
		<jar destfile="${release.dir}/${jar.name}" basedir="${bin.dir}"
			excludes="org/seasar/s2click/example/**"/>
	</target>

	<!--==================================================-->
	<!-- サンプルのwarファイルを作成 -->
	<!--==================================================-->
	<target name="build-example" depends="jar">
		<mkdir dir="${example.dir}"/>
    	<copy todir="${example.dir}">
    		<fileset dir="../WebContent" includes="*/**"
    			excludes="**/src,**/src/*.jar"/>
    	</copy>
    	<copy todir="${example.dir}/WEB-INF/lib">
    		<fileset dir="${release.dir}" includes="${jar.name}" />
    	</copy>
		<mkdir dir="${example.dir}/WEB-INF/classes"/>
    	<javac srcdir="${src.dir}" destdir="${example.dir}/WEB-INF/classes"
    		source="1.5" target="1.5" encoding="UTF-8" debug="true" classpathref="classpath"
    		includes="org/seasar/s2click/example/**"/>
    	<copy todir="${example.dir}/WEB-INF/classes">
    		<fileset dir="${src.dir}" includes="org/seasar/s2click/example/**"/>
    		<fileset dir="${src.dir}" includes="data/*"/>
    		<fileset dir="${src.dir}" includes="*.dicon"/>
    		<fileset dir="${src.dir}" includes="env.txt"/>
    	</copy>
		<war destfile="${release.dir}/${example.war.name}"
			basedir="${example.dir}" />
	</target>

	<!--==================================================-->
	<!-- S2Clickのブランクプロジェクトを作成 -->
	<!--==================================================-->
	<target name="build-blank" depends="jar">
    	<copy todir="${blank.dir}/s2click/WebContent/WEB-INF/lib">
    		<fileset dir="../WebContent/WEB-INF/lib" includes="*.jar"
    			excludes="geronimo-*.jar, s2-tiger-*.jar"/>
    		<fileset dir="${release.dir}" includes="${jar.name}"/>
    	</copy>
		<zip destfile="${release.dir}/${blank.zip.name}"
			basedir="${blank.dir}" includes="s2click/**"/>
	</target>

	<!--==================================================-->
	<!-- S2Click-S2JDBCのブランクプロジェクトを作成 -->
	<!--==================================================-->
	<target name="build-blank-s2jdbc" depends="jar">
    	<copy todir="${blank-s2jdbc.dir}/s2click/WebContent/WEB-INF/lib">
    		<fileset dir="../WebContent/WEB-INF/lib" includes="*.jar"/>
    		<fileset dir="${release.dir}" includes="${jar.name}"/>
    	</copy>
		<zip destfile="${release.dir}/${blank-s2jdbc.zip.name}"
			basedir="${blank-s2jdbc.dir}" includes="s2click/**"/>
	</target>

	<!--==================================================-->
	<!-- リリースアーカイブを作成 -->
	<!--==================================================-->
	<target name="release" depends="clean, javadoc, build-example, build-blank, build-blank-s2jdbc">
		<mkdir dir="${release.dir}/lib"/>
    	<copy todir="${release.dir}/lib">
    		<fileset dir="../WebContent/WEB-INF/lib" includes="*.jar" />
    	</copy>

		<mkdir dir="${release.dir}/doc"/>
    	<copy todir="${release.dir}/doc">
    		<fileset dir="../docs" includes="**"/>
    	</copy>

		<mkdir dir="${release.dir}/doc/javadoc"/>
    	<copy todir="${release.dir}/doc/javadoc">
    		<fileset dir="${javadoc.dir}" includes="**"/>
    	</copy>

		<zip destfile="${release.zip.name}" basedir="."
			includes="${release.dir}/**"/>
	</target>

	<!--==================================================-->
	<!-- ビルドプロセスが生成したリソースを削除 -->
	<!--==================================================-->
	<target name="clean">
		<delete file="cobertura.ser"/>
		<delete dir="cobertura"/>
		<delete dir="${bin.dir}"/>
		<delete dir="${test.bin.dir}"/>
		<delete dir="${doc.dir}"/>
		<delete dir="${example.dir}"/>
		<delete dir="${release.dir}"/>
		<delete file="${release.zip.name}"/>
		<delete>
			<fileset dir="${blank.dir}/s2click/WebContent/WEB-INF/lib"
				includes="*.jar" />
			<fileset dir="${blank-s2jdbc.dir}/s2click/WebContent/WEB-INF/lib"
				includes="*.jar" />
			<fileset dir="."
				includes="TEST-*.txt" />
		</delete>
	</target>
</project>
